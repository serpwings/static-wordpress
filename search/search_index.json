{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"static-wordpress \u00b6 Python Package for Converting WordPress Installation to a Static Website. How to Install static-wordpress? \u00b6 Windows Installer \u00b6 We provide an exe file of staticwordpress for the convenice of users. Please download the latest version from release section . Source Code \u00b6 Clone or download this repository to your computer. Create a virtual environment using python -m .venv venv Navigate to the downloaded directory and then install all required dependencies using pip install -e . Once all dependencies are met, then start staticwordpress by typing staticwordpress on commandline. Development \u00b6 This package is available at pypi and you can install it with pip install staticwordpress command. It will also install required additional libraries/Python Packages automatically. Once installed, you can implement customized workflows. Here is an example of post processing simply-static-zip file. import logging from staticwordpress.core.workflow import Workflow from staticwordpress.core.constants import SOURCE, HOST # enable logging for all functions. logging.basicConfig( format=\"%(asctime)s - %(levelname)s - %(message)s\", level=logging.DEBUG, stream=sys.stdout, ) swp = Workflow() swp.create_project( project_name_=\"simply-static-zip-deploy\", wp_user_=env_wp_user, # your wordpress username wp_api_token_=env_wp_api_token, # wordpress xml api token src_url_=env_src_url, # source url where WordPress is hosted dst_url_=env_dst_url, # destination url where you want to host Static version output_folder_=env_output, # Output folder location, where processed files will be saved src_type_=SOURCE.ZIP, # Data Source e.g. ZIP file from Simply Static WordPress Plugin host_type_=HOST.NETLIFY, # Host, where you want to deplyo your website. ) swp.download_zip_file() swp.setup_zip_folders() swp.add_404_page() swp.add_robots_txt() swp.add_redirects() swp.add_search() Documentation \u00b6 Detailed documentation of all features is available at staticwordpress documentation . Contribute \u00b6 Pull Requests, Feature Suggestions, and collaborations are welcome. ICONS \u00b6 Icons used in this project are obtained from Google Fonts Material Symbols About Us \u00b6 This work is a collaborative effort of seowings , and serpwings .","title":"Home"},{"location":"#static-wordpress","text":"Python Package for Converting WordPress Installation to a Static Website.","title":"static-wordpress"},{"location":"#how-to-install-static-wordpress","text":"","title":"How to Install static-wordpress?"},{"location":"#windows-installer","text":"We provide an exe file of staticwordpress for the convenice of users. Please download the latest version from release section .","title":"Windows Installer"},{"location":"#source-code","text":"Clone or download this repository to your computer. Create a virtual environment using python -m .venv venv Navigate to the downloaded directory and then install all required dependencies using pip install -e . Once all dependencies are met, then start staticwordpress by typing staticwordpress on commandline.","title":"Source Code"},{"location":"#development","text":"This package is available at pypi and you can install it with pip install staticwordpress command. It will also install required additional libraries/Python Packages automatically. Once installed, you can implement customized workflows. Here is an example of post processing simply-static-zip file. import logging from staticwordpress.core.workflow import Workflow from staticwordpress.core.constants import SOURCE, HOST # enable logging for all functions. logging.basicConfig( format=\"%(asctime)s - %(levelname)s - %(message)s\", level=logging.DEBUG, stream=sys.stdout, ) swp = Workflow() swp.create_project( project_name_=\"simply-static-zip-deploy\", wp_user_=env_wp_user, # your wordpress username wp_api_token_=env_wp_api_token, # wordpress xml api token src_url_=env_src_url, # source url where WordPress is hosted dst_url_=env_dst_url, # destination url where you want to host Static version output_folder_=env_output, # Output folder location, where processed files will be saved src_type_=SOURCE.ZIP, # Data Source e.g. ZIP file from Simply Static WordPress Plugin host_type_=HOST.NETLIFY, # Host, where you want to deplyo your website. ) swp.download_zip_file() swp.setup_zip_folders() swp.add_404_page() swp.add_robots_txt() swp.add_redirects() swp.add_search()","title":"Development"},{"location":"#documentation","text":"Detailed documentation of all features is available at staticwordpress documentation .","title":"Documentation"},{"location":"#contribute","text":"Pull Requests, Feature Suggestions, and collaborations are welcome.","title":"Contribute"},{"location":"#icons","text":"Icons used in this project are obtained from Google Fonts Material Symbols","title":"ICONS"},{"location":"#about-us","text":"This work is a collaborative effort of seowings , and serpwings .","title":"About Us"},{"location":"tutorial/","text":"Tutorial: How to Deploy Static WordPress \u00b6 Please read/watch detailed tutorial on Seowings Tutorial Page .","title":"Tutorial"},{"location":"tutorial/#tutorial-how-to-deploy-static-wordpress","text":"Please read/watch detailed tutorial on Seowings Tutorial Page .","title":"Tutorial: How to Deploy Static WordPress"}]}